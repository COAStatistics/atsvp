upstream app {
    ip_hash;
    server atsvp:8000;
}


server {
    listen 80;
    server_name atsvp.atri.org.tw;
    location / {
#        proxy_pass             http://app2;
        return 301 https://$host$request_uri;
    }
    location /.well-known/pki-validation/ {
        alias /.well-known/pki-validation/;
    }

}

server {
    # Listen to port 443 on both IPv4 and IPv6.
    listen 443 ssl http2;
    # Domain names this server should respond to.
    server_name atsvp.atri.org.tw;

    # Load the certificate files.
    ssl_certificate     /etc/letsencrypt/live/atsvp.atri.org.tw/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/atsvp.atri.org.tw/privkey.pem;

    # ssl_certificate      /etc/ssl/live/atsvp.atri.org.tw/certificate.crt;
    # ssl_certificate_key  /etc/ssl/live/atsvp.atri.org.tw/private.key;

    # Load the Diffie-Hellman parameter.
    # ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    # return 200 'Let\'s Encrypt certificate successfully installed!';
    add_header Content-Type text/plain;
    location / {
                        add_header X-Proxy-Cache    $upstream_cache_status;

            proxy_pass             http://app;

                              proxy_set_header            Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # proxy_cache_key             "$scheme$host$request_uri";
            # proxy_cache                 STATIC;
            # proxy_cache_valid           200  1d;
            # proxy_cache_use_stale       error timeout invalid_header updating
            #                             http_500 http_502 http_503 http_504;

            proxy_connect_timeout       6000;
            proxy_send_timeout          6000;
            proxy_read_timeout          6000;
            proxy_buffer_size           4k;
            proxy_buffers               4 32k;
            proxy_busy_buffers_size     64k;
            proxy_temp_file_write_size  64k;
            send_timeout                6000;
            proxy_buffering             off;
  }

    location /static/ {
        include     /etc/nginx/mime.types;
        default_type application/octet-stream;
        autoindex on;
        alias /app/live-static-files/static-root/;
        add_header Cache-Control "public, max-age=604800";
    }

# Enable Gzip
gzip on;
gzip_http_version 1.0;
gzip_comp_level 2;
gzip_min_length 1100;
gzip_buffers  4 8k;
gzip_proxied any;
gzip_types
# text/html is always compressed by HttpGzipModule
text/css
text/javascript
text/xml
text/plain
text/x-component
application/javascript
application/json
application/xml
application/rss+xml
font/truetype
font/opentype
application/vnd.ms-fontobject
image/svg+xml;

gzip_static on;
gzip_proxied  expired no-cache no-store private auth;
gzip_disable  "MSIE [1-6]\.";
gzip_vary   on;
}

